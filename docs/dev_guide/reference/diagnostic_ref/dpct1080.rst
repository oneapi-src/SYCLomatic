.. _DPCT1080:

DPCT1080
========

Message
-------

.. _msg-1080-start:

Variadic functions cannot be called in a SYCL kernel or by functions
called by the kernel. You may need to adjust the code.

.. _msg-1080-end:

Detailed Help
-------------

SYCL\* device functions canâ€™t call variadic functions.

Suggestions to Fix
------------------

Rewrite code manually by using non-variadic functions.

For example, this original CUDA\* code:

.. code-block:: cpp
   :linenos:

   __device__ int add(int arg_num, ...) {
     va_list args;
     va_start(args, arg_num);
     int sum = 0;
     for (int i = 0; i < arg_num; i++) {
       sum += va_arg(args, int);;
     }
     va_end(args);
     return sum;
   };
   
   __global__ void kernel(int *p) {
     int x = add(2, 123, 456);
     int y = add(3, 123, 456, 789);
   }

results in the following migrated SYCL code:

.. code-block:: cpp
   :linenos:

   /*
   DPCT1080:0: Variadic functions cannot be called in a SYCL kernel or by functions
   called by the kernel. You may need to adjust the code.
   */
   int add(int arg_num, ...) {
     va_list args;
     va_start(args, arg_num);
     int sum = 0;
     for (int i = 0; i < arg_num; i++) {
       sum += va_arg(args, int);;
     }
     va_end(args);
     return sum;
   };
   
   void kernel(int *p) {
     int x = add(2, 123, 456);
     int y = add(3, 123, 456, 789);
   }

which is rewritten to:

.. code-block:: cpp
   :linenos:

   int add(int a0, int a1) {
     return a0 + a1;
   };
   
   int add(int a0, int a1, int a2) {
     return a0 + a1 + a2;
   };
   
   void kernel(int *p) {
     int x = add(123, 456);
     int y = add(123, 456, 789);
   }
