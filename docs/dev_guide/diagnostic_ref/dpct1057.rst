.. _DPCT1057:

DPCT1057
========

Message
-------

.. _msg-1057-start:

Variable *<variable name>* was used in host code and device code.
*<variable name>* type was updated to be used in SYCL device code and new
*<host variable name>* was generated to be used in host code. You need to update
the host code manually to use the new *<host variable name>*.

.. _msg-1057-end:

Detailed Help
-------------

If ``__constant__variable`` is used in both host code and device code (for example,
the variable is included in two compilation units and they are compiled by different
compilers), it will be migrated to a ``dpct::constant_memory`` object and a new
host variable *<host variable name>*.

Suggestions to Fix
------------------

You need to update the host code manually to use the new *<host variable name>*.

Commands:

.. code-block:: bash
   :linenos:

   dpct --out-root out a.cu
   dpct --out-root out b.c --extra-arg=-xc

For example, this original CUDA\* code:

.. code-block:: cpp
   :linenos:

   // h.h:
   #include <cuda_runtime.h>
   #include <stdio.h>

   static __constant__ const float aaa = 10.f;
   
   // a.cu:
   #include "h.h"
   
   __device__ void foo_device() {
     printf("%f\n", aaa);
   }

   // b.c:
   #include "h.h"
   
   void foo_host() {
     printf("%f\n", aaa);
   }

results in the following migrated SYCL\* code:

.. code-block:: cpp
   :linenos:

   // h.h:
   #include <sycl/sycl.hpp>
   #include <dpct/dpct.hpp>
   #include <stdio.h>
   
   /*
   DPCT1057:0: Variable aaa was used in host code and device code. aaa type was
   updated to be used in SYCL device code and new aaa_host_ct1 was generated to be
   used in host code. You need to update the host code manually to use the new
   aaa_host_ct1.
   */
   static const float aaa_host_ct1 = 10.f;
   static dpct::constant_memory<const float, 0> aaa(10.f);

   // a.dp.cpp:
   #include <sycl/sycl.hpp>
   #include <dpct/dpct.hpp>
   #include "h.h"
   
   void foo_device(const sycl::stream &stream_ct1, const float aaa) {
     /*
     DPCT1015:0: Output needs adjustment.
     */
     stream_ct1 << "%f\n";
   }

   // b.c:
   #include "h.h"
   
   void foo_host() {
     printf("%f\n", aaa);
   }

which is rewritten to:

.. code-block:: cpp
   :linenos:

   // h.h:
   #include <sycl/sycl.hpp>
   #include <dpct/dpct.hpp>
   #include <stdio.h>
   
   static const float aaa_host_ct1 = 10.f;
   static dpct::constant_memory<const float, 0> aaa(10.f);

   // a.dp.cpp:
   #include <sycl/sycl.hpp>
   #include <dpct/dpct.hpp>
   #include "h.h"
   
   void foo_device(const sycl::stream &stream_ct1, const float aaa) {
     stream_ct1 << aaa << "\n";
   }

   // b.c:
   #include "h.h"
   
   void foo_host() {
     printf("%f\n", aaa_host_ct1);
   }

