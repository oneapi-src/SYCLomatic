.. _DPCT1073:

DPCT1073
========

Message
-------

.. _msg-1073-start:

The field values of parameter *<parameter name>* could not be deduced, so the call was not
migrated. You need to update this code manually.

.. _msg-1073-end:

Detailed Help
-------------

|tool_name| could not deduce the field values of the call parameter,
which is used in the migrated code.

Suggestions to Fix
------------------

Manually replace the non-migrated call with a |dpcpp| expression using the actual
field values of the parameters. 

For example, this original CUDA\* code:

.. code-block:: cpp
   :linenos:
  
   CUDA_ARRAY_DESCRIPTOR desc;
   
   void bar(CUDA_ARRAY_DESCRIPTOR *desc_ptr) {
     CUarray arr;
     cuArrayCreate(&arr, desc_ptr);
   }
   
   void foo(CUarray_format f, size_t h, unsigned int n, size_t w) {
     desc.Height = h;
     desc.Width = w;
     desc.Format = f;
     desc.NumChannels = n;
     bar(&desc);
   }

results in the following migrated SYCL\* code:

.. code-block:: cpp
   :linenos:

   size_t desc_x_ct1, desc_y_ct1;
   unsigned desc_channel_num_ct1;
   sycl::image_channel_type desc_channel_type_ct1;
   
   /*
   DPCT1082:1: Migration of CUDA_ARRAY_DESCRIPTOR * type is not supported.
   */
   void bar(CUDA_ARRAY_DESCRIPTOR *desc_ptr) {
     dpct::image_matrix_p arr;
     /*
     DPCT1073:0: The field values of parameter 'desc_ptr' could not be deduced, so
     the call was not migrated. You need to update this code manually.
     */
     cuArrayCreate(&arr, desc_ptr);
   }
   
   void foo(sycl::image_channel_type f, size_t h, unsigned int n, size_t w) {
     desc_y_ct1 = h;
     desc_x_ct1 = w;
     desc_channel_type_ct1 = f;
     desc_channel_num_ct1 = n;
     bar(&desc);
   }

which is manually adjusted to:

.. code-block:: cpp
   :linenos:
  
   size_t desc_x_ct1, desc_y_ct1;
   unsigned desc_channel_num_ct1;
   sycl::image_channel_type desc_channel_type_ct1;
   
   void bar() {
     dpct::image_matrix_p arr;
     arr = new dpct::image_matrix(desc_channel_type_ct1, desc_channel_num_ct1,
                                  desc_x_ct1, desc_y_ct1);
   }
   
   void foo(sycl::image_channel_type f, size_t h, unsigned int n, size_t w) {
     desc_y_ct1 = h;
     desc_x_ct1 = w;
     desc_channel_type_ct1 = f;
     desc_channel_num_ct1 = n;
     bar();
   }
