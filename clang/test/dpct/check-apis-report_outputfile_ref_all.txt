// CHECK:Processing: {{(.+)/([^/]+)}}.cu
// CHECK:{{(.+)/([^/]+)}}:{{[0-9]+}}:{{[0-9]+}}: warning: DPCT1003:{{[0-9]+}}: Migrated API does not return error code. (*, 0) is inserted. You may need to rewrite this code.
// CHECK:  cudaError_t err = cudaDeviceSynchronize();
// CHECK:                    ^
// CHECK:{{(.+)/([^/]+)}}:{{[0-9]+}}:{{[0-9]+}}: warning: DPCT1003:{{[0-9]+}}: Migrated API does not return error code. (*, 0) is inserted. You may need to rewrite this code.
// CHECK:  checkError(cudaDeviceSynchronize());
// CHECK:             ^
// CHECK:{{(.+)/([^/]+)}}:{{[0-9]+}}:{{[0-9]+}}: warning: DPCT1003:{{[0-9]+}}: Migrated API does not return error code. (*, 0) is inserted. You may need to rewrite this code.
// CHECK:  return cudaDeviceSynchronize();
// CHECK:         ^
// CHECK:{{(.+)/([^/]+)}}:{{[0-9]+}}:{{[0-9]+}}: warning: DPCT1007:{{[0-9]+}}: Migration of cuMemGetAddressRange is not supported.
// CHECK:    cuMemGetAddressRange_v2(&base, &size_range, dptr);
// CHECK:    ^
// CHECK:API name				Frequency
// CHECK:CUresult cuMemGetAddressRange_v2(CUdeviceptr * pbase,size_t * psize,CUdeviceptr dptr)               1
// CHECK:cudaChannelFormatDesc cudaCreateChannelDesc()               1
// CHECK:cudaDeviceProp                               1
// CHECK:cudaError_t                                  3
// CHECK:cudaError_t cudaDeviceSynchronize()               4
// CHECK:cudaError_t cudaFree(void * devPtr)               1
// CHECK:cudaError_t cudaFreeHost(void * ptr)               1
// CHECK:cudaError_t cudaFuncGetAttributes(struct cudaFuncAttributes * attr,void (*)(float *, const float *, const float *) entry)               1
// CHECK:cudaError_t cudaMalloc(void ** devPtr,size_t size)               2
// CHECK:cudaError_t cudaMalloc3D(struct cudaPitchedPtr * pitchedDevPtr,struct cudaExtent extent)               1
// CHECK:cudaError_t cudaMallocHost(float ** ptr,size_t size,unsigned int flags)               1
// CHECK:cudaError_t cudaMemcpy(void * dst,const void * src,size_t count,enum cudaMemcpyKind kind)               2
// CHECK:cudaError_t cudaMemset(void * devPtr,int value,size_t count)               1
// CHECK:cudaStream_t                                 1
// CHECK:dim3                                         2
// CHECK:float max(float a,float b)                   1
// CHECK:int2                                         3
// CHECK:longlong4                                    1
// CHECK:struct cudaExtent make_cudaExtent(size_t w,size_t h,size_t d)               2
// CHECK:struct cudaPitchedPtr make_cudaPitchedPtr(void * d,size_t p,size_t xsz,size_t ysz)               1
// CHECK:uint4                                        1
