cmake_minimum_required(VERSION 3.24)
###CMake_minimum_required(VERSION 3.10)
#CMake_minimum_required(VERSION 3.10)
project(foo-bar LANGUAGES CXX)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsycl")
find_program(dpct_bin_path NAMES dpct PATHS)
get_filename_component(bin_path_of_dpct ${dpct_bin_path} DIRECTORY)
set(dpct_cmake_file_path "${bin_path_of_dpct}/../cmake/dpct.cmake")
include(${dpct_cmake_file_path})

set (CMAKE_CXX_STANDARD 17)
set (CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
find_package(IntelSYCL REQUIRED)
set(SOURCES
    ${CMAKE_SOURCE_DIR}/foo/main.dp.cpp
 ${CMAKE_SOURCE_DIR}/foo/bar/util.dp.cpp)
include_directories(
    ${CMAKE_SOURCE_DIR}/foo/bar
    ${CUDA_INCLUDE_DIRS}
)
add_executable(foo-bar ${SOURCES})
project(foo )
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsycl")
find_program(dpct_bin_path NAMES dpct PATHS)
get_filename_component(bin_path_of_dpct ${dpct_bin_path} DIRECTORY)
set(dpct_cmake_file_path "${bin_path_of_dpct}/../cmake/dpct.cmake")
include(${dpct_cmake_file_path})

project(foo2  CXX)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsycl")
find_program(dpct_bin_path NAMES dpct PATHS)
get_filename_component(bin_path_of_dpct ${dpct_bin_path} DIRECTORY)
set(dpct_cmake_file_path "${bin_path_of_dpct}/../cmake/dpct.cmake")
include(${dpct_cmake_file_path})

target_link_libraries(foo3 PUBLIC  ${TCNN_LIBRARIES} fmt)

set(SOURCES a.dp.cpp b.cuh)
