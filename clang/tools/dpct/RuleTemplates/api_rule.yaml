# Copyright (C) Intel Corporation
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
# See https://llvm.org/LICENSE.txt for license information.

# The rule specified in this file can be imported with commandline option:
# --rule-file={dpct_install_folder}/extensions/rule_templates/api_rule.yaml
---
- Rule: rule_foo_to_goo
  Kind: API
  Priority: Takeover
  In: foo
  Out: $type_name_of($2) a = goo($deref($1), ($deref_type($1))$addr_of($1), $queue, $context, $device)
  Includes: ["ccc.h"]

# Following are the original CUDA source code and the migrated SYCL source code after applying the above rule.
# example.cu:
# ---------------------------------
# void foo(int *i, int2 j){}
# int main(){
#   int *ptr;
#   int2 b;
#   foo(ptr, b);
# }
# ---------------------------------
#
# example.dp.cpp:
# Generated by: dpct example.cu --rule-file={dpct_install_folder}/extensions/rule_templates/api_rule.yaml
# ---------------------------------
# #include <sycl/sycl.hpp>
# #include <dpct/dpct.hpp>
# #include "ccc.h"
# void foo(int *i, sycl::int2 j) {}
# int main(){
#   int *ptr;
#   sycl::int2 b;
#   sycl::int2 a = goo(*ptr, (int)&(ptr), dpct::get_in_order_queue(),
#                      dpct::get_default_context(), dpct::get_current_device());
# }
# ---------------------------------

# Migration Rules section of IntelÂ® DPC++ Compatibility Tool Developer Guide and Reference in
# https://www.intel.com/content/www/us/en/developer/tools/oneapi/dpc-compatibility-tool-documentation.html