# Copyright (C) Intel Corporation
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
# See https://llvm.org/LICENSE.txt for license information.

# This file will be installed to folder:
# {dpct_install_folder}/extensions/opt_rules.
# The rule specified in this file can be imported with commandline option:
# --rule-file={dpct_install_folder}/extensions/opt_rules/cmake_rules/cmake_script_migration_rule.yaml

- Rule: rule_project
  Kind: CMakeRule
  MatchMode: Partial
  Priority: Fallback
  CmakeSyntax: project
  In: project(${arg0} ${argN})
  Out: |
   project(${arg0} ${argN})
   set(CMAKE_CXX_FLAGS "\${CMAKE_CXX_FLAGS} -fsycl")
  Subrules:
    argN:
      In: CUDA
      Out: ""
      MatchMode: Full
      RuleId: "remove_cuda"

- Rule: rule_find_package
  Kind: CMakeRule
  Priority: Fallback
  CmakeSyntax: find_package
  In: find_package(${arg0} REQUIRED)
  Out: find_package(IntelSYCL REQUIRED)

- Rule: rule_set
  Kind: CMakeRule
  Priority: Fallback
  CmakeSyntax: set
  In: set(${value})
  Out: set(${value})
  Subrules:
    value:
      In: ${arg}.cu
      Out: ${arg}.dp.cpp

- Rule: rule_set_property
  Kind: CMakeRule
  Priority: Fallback
  CmakeSyntax: set_property
  In: set_property(${value})
  Out: set_property(${value})
  Subrules:
    value:
      In: ${arg}.cu
      Out: ${arg}.dp.cpp

- Rule: rule_cuda_add_executable
  Kind: CMakeRule
  Priority: Fallback
  CmakeSyntax: cuda_add_executable
  In: cuda_add_executable(${value})
  Out: add_executable(${value})
  Subrules:
    value:
      In: ${arg}.cu
      Out: ${arg}.dp.cpp

- Rule: rule_add_executable
  Kind: CMakeRule
  Priority: Fallback
  CmakeSyntax: add_executable
  In: add_executable(${value})
  Out: add_executable(${value})
  Subrules:
    value:
      In: ${arg}.cu
      Out: ${arg}.dp.cpp

- Rule: rule_target_link_libraries_cublas
  Kind: CMakeRule
  Priority: Default
  CmakeSyntax: target_link_libraries
  In: target_link_libraries(${NAME} ${SCOPE} ${CMakeLibraries})
  Out: target_link_libraries(${NAME} ${SCOPE} ${CMakeLibraries})
  Subrules:
    CMakeLibraries:
      In: ${Prefix}cublas${Suffix}
      Out: ${Prefix}-L${MKLROOT}/lib/intel64 -lmkl_sycl -lmkl_intel_ilp64 -lmkl_tbb_thread -lmkl_core${Suffix}

- Rule: rule_target_link_libraries_libstc++
  Kind: CMakeRule
  Priority: Default
  CmakeSyntax: target_link_libraries
  In: target_link_libraries(${NAME} ${SCOPE} -static-libstdc++ ${StaticLibraries})
  Out: target_link_libraries(${NAME} ${SCOPE} ${StaticLibraries})
